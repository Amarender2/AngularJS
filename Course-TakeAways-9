Form Validation
-----------------------------------
1. Create HTML form with name attributes
2. Bind input with ng-model or ng-click
3. Declare HTML5 validation attributes (required or ng-min-length)
 'novalidate' in <form> to avoid HTML validation
4. Use Angular form Bound Objects
<span ng-if="formName.name.$error.required && formName.name.$touched">
</span>
5. Use Angular Validation Styles
.ng-touched.ng-valid {
  border : 2px green solid;
}
.ng-touched.ng-invalid {
  border : 2px red solid;
}

Testing
--------------------------------
describe("CookieDetector", function() { ... }
// Used to group tests together

beforeEach(function() { ... }
Used to initialize the state before running each test

it("should be able to detect no cookies", function() { ... }

Controller Testing
-------------------------------------
Angular provides ngMock Module to help with unit testing
To test a controller you need:
1. Load module controller is in angular.mock.module('name')
2. Use $controller to instantiate the controller you want to test
3. controller instance to invoke methods, access props
Do most of the setup in beforeEach
At least module('name') loading or more
$provide service can be injected only into module('name')
For other services, use angular.mock.inject method

Service Testing
---------------------------------------
$injector service is used to inject mocked Services and httpBackend to simulate network server response

menucategories = $injector.get('MenuCategoriesService');
It will retrieve the service 'MenuCategoriesService' defined in the injected module.

$httpBackend = $injector.get('$httpBackend');
